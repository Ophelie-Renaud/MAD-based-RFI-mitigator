-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_graph_top_rfi_C_RFIFilter_0_2048_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n : IN STD_LOGIC;
    stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_read : OUT STD_LOGIC;
    stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n : IN STD_LOGIC;
    stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_read : OUT STD_LOGIC;
    stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n : IN STD_LOGIC;
    stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_read : OUT STD_LOGIC;
    stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n : IN STD_LOGIC;
    stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_read : OUT STD_LOGIC;
    stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_empty_n : IN STD_LOGIC;
    stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read : OUT STD_LOGIC;
    stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_empty_n : IN STD_LOGIC;
    stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read : OUT STD_LOGIC;
    stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_full_n : IN STD_LOGIC;
    stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write : OUT STD_LOGIC;
    stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_full_n : IN STD_LOGIC;
    stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write : OUT STD_LOGIC );
end;


architecture behav of top_graph_top_rfi_C_RFIFilter_0_2048_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_blk_n : STD_LOGIC;
    signal stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_blk_n : STD_LOGIC;
    signal stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_blk_n : STD_LOGIC;
    signal stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_blk_n : STD_LOGIC;
    signal stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_read_reg_182 : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_read_reg_187 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_126_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add4_i_reg_202 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_130_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal av_threshold_i_reg_207 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal empty_318_fu_146_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal empty_318_reg_214 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal empty_320_fu_162_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal empty_320_reg_220 : STD_LOGIC_VECTOR (62 downto 0);
    signal sub_i_i_fu_168_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_i_i_reg_226 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln20_2_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_2_reg_232 : STD_LOGIC_VECTOR (0 downto 0);
    signal RRi_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal RRi_ce0 : STD_LOGIC;
    signal RRi_we0 : STD_LOGIC;
    signal RRi_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal RRo_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal RRo_ce0 : STD_LOGIC;
    signal RRo_we0 : STD_LOGIC;
    signal RRo_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal RIi_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal RIi_ce0 : STD_LOGIC;
    signal RIi_we0 : STD_LOGIC;
    signal RIi_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal RIo_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal RIo_ce0 : STD_LOGIC;
    signal RIo_we0 : STD_LOGIC;
    signal RIo_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_done : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_idle : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_ready : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_ce0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_we0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_ce0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_we0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_done : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_idle : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_ready : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRi_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRi_ce0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_ce0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_we0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_done : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_idle : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_ready : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIi_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIi_ce0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_ce0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_we0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_idle : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_ready : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RRo_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RRo_ce0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RIo_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RIo_ce0 : STD_LOGIC;
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start_reg : STD_LOGIC := '0';
    signal grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal grp_fu_126_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sub_i_to_int_i_fu_143_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_i_neg_i_fu_156_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_319_fu_152_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_126_ce : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_graph_top_rfi_C_RFIFilter_0_2048_double_Pipeline_loop_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_empty_n : IN STD_LOGIC;
        stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read : OUT STD_LOGIC;
        stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_empty_n : IN STD_LOGIC;
        stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read : OUT STD_LOGIC;
        RRi_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        RRi_ce0 : OUT STD_LOGIC;
        RRi_we0 : OUT STD_LOGIC;
        RRi_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        RIi_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        RIi_ce0 : OUT STD_LOGIC;
        RIi_we0 : OUT STD_LOGIC;
        RIi_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_graph_top_rfi_C_RFIFilter_0_2048_double_Pipeline_loop_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        RRi_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        RRi_ce0 : OUT STD_LOGIC;
        RRi_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sub_i_neg_i : IN STD_LOGIC_VECTOR (62 downto 0);
        icmp_ln20_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        sub_i_i : IN STD_LOGIC_VECTOR (63 downto 0);
        RRo_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        RRo_ce0 : OUT STD_LOGIC;
        RRo_we0 : OUT STD_LOGIC;
        RRo_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sub_i_to_int_i : IN STD_LOGIC_VECTOR (62 downto 0);
        av_threshold_i : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_graph_top_rfi_C_RFIFilter_0_2048_double_Pipeline_loop_114 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        RIi_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        RIi_ce0 : OUT STD_LOGIC;
        RIi_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sub_i_neg_i : IN STD_LOGIC_VECTOR (62 downto 0);
        icmp_ln20_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        sub_i_i : IN STD_LOGIC_VECTOR (63 downto 0);
        RIo_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        RIo_ce0 : OUT STD_LOGIC;
        RIo_we0 : OUT STD_LOGIC;
        RIo_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sub_i_to_int_i : IN STD_LOGIC_VECTOR (62 downto 0);
        av_threshold_i : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_graph_top_rfi_C_RFIFilter_0_2048_double_Pipeline_loop_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_full_n : IN STD_LOGIC;
        stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write : OUT STD_LOGIC;
        stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_full_n : IN STD_LOGIC;
        stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write : OUT STD_LOGIC;
        RRo_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        RRo_ce0 : OUT STD_LOGIC;
        RRo_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        RIo_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        RIo_ce0 : OUT STD_LOGIC;
        RIo_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_graph_top_rfi_C_dadd_64ns_64ns_64_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_graph_top_rfi_C_dmul_64ns_64ns_64_7_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_graph_top_rfi_C_RFIFilter_0_2048_double_s_RRi_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    RRi_U : component top_graph_top_rfi_C_RFIFilter_0_2048_double_s_RRi_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => RRi_address0,
        ce0 => RRi_ce0,
        we0 => RRi_we0,
        d0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_d0,
        q0 => RRi_q0);

    RRo_U : component top_graph_top_rfi_C_RFIFilter_0_2048_double_s_RRi_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => RRo_address0,
        ce0 => RRo_ce0,
        we0 => RRo_we0,
        d0 => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_d0,
        q0 => RRo_q0);

    RIi_U : component top_graph_top_rfi_C_RFIFilter_0_2048_double_s_RRi_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => RIi_address0,
        ce0 => RIi_ce0,
        we0 => RIi_we0,
        d0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_d0,
        q0 => RIi_q0);

    RIo_U : component top_graph_top_rfi_C_RFIFilter_0_2048_double_s_RRi_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => RIo_address0,
        ce0 => RIo_ce0,
        we0 => RIo_we0,
        d0 => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_d0,
        q0 => RIo_q0);

    grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84 : component top_graph_top_rfi_C_RFIFilter_0_2048_double_Pipeline_loop_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start,
        ap_done => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_done,
        ap_idle => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_idle,
        ap_ready => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_ready,
        stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_dout => stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_dout,
        stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_empty_n => stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_empty_n,
        stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read,
        stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_dout => stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_dout,
        stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_empty_n => stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_empty_n,
        stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read,
        RRi_address0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_address0,
        RRi_ce0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_ce0,
        RRi_we0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_we0,
        RRi_d0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_d0,
        RIi_address0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_address0,
        RIi_ce0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_ce0,
        RIi_we0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_we0,
        RIi_d0 => grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_d0);

    grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94 : component top_graph_top_rfi_C_RFIFilter_0_2048_double_Pipeline_loop_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start,
        ap_done => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_done,
        ap_idle => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_idle,
        ap_ready => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_ready,
        RRi_address0 => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRi_address0,
        RRi_ce0 => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRi_ce0,
        RRi_q0 => RRi_q0,
        sub_i_neg_i => empty_320_reg_220,
        icmp_ln20_2 => icmp_ln20_2_reg_232,
        sub_i_i => sub_i_i_reg_226,
        RRo_address0 => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_address0,
        RRo_ce0 => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_ce0,
        RRo_we0 => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_we0,
        RRo_d0 => grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_d0,
        sub_i_to_int_i => empty_318_reg_214,
        av_threshold_i => av_threshold_i_reg_207);

    grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105 : component top_graph_top_rfi_C_RFIFilter_0_2048_double_Pipeline_loop_114
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start,
        ap_done => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_done,
        ap_idle => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_idle,
        ap_ready => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_ready,
        RIi_address0 => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIi_address0,
        RIi_ce0 => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIi_ce0,
        RIi_q0 => RIi_q0,
        sub_i_neg_i => empty_320_reg_220,
        icmp_ln20_2 => icmp_ln20_2_reg_232,
        sub_i_i => sub_i_i_reg_226,
        RIo_address0 => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_address0,
        RIo_ce0 => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_ce0,
        RIo_we0 => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_we0,
        RIo_d0 => grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_d0,
        sub_i_to_int_i => empty_318_reg_214,
        av_threshold_i => av_threshold_i_reg_207);

    grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116 : component top_graph_top_rfi_C_RFIFilter_0_2048_double_Pipeline_loop_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start,
        ap_done => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done,
        ap_idle => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_idle,
        ap_ready => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_ready,
        stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_din => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_din,
        stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_full_n => stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_full_n,
        stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write,
        stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_din => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_din,
        stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_full_n => stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_full_n,
        stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write,
        RRo_address0 => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RRo_address0,
        RRo_ce0 => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RRo_ce0,
        RRo_q0 => RRo_q0,
        RIo_address0 => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RIo_address0,
        RIo_ce0 => grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RIo_ce0,
        RIo_q0 => RIo_q0);

    dadd_64ns_64ns_64_7_full_dsp_1_U210 : component top_graph_top_rfi_C_dadd_64ns_64ns_64_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_126_p0,
        din1 => grp_fu_126_p1,
        ce => grp_fu_126_ce,
        dout => grp_fu_126_p2);

    dmul_64ns_64ns_64_7_max_dsp_1_U211 : component top_graph_top_rfi_C_dmul_64ns_64ns_64_7_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add4_i_reg_202,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => ap_const_logic_1,
        dout => grp_fu_130_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_ready = ap_const_logic_1)) then 
                    grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_ready = ap_const_logic_1)) then 
                    grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_ready = ap_const_logic_1)) then 
                    grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_ready = ap_const_logic_1)) then 
                    grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add4_i_reg_202 <= grp_fu_126_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                av_threshold_i_reg_207 <= grp_fu_130_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                empty_318_reg_214 <= empty_318_fu_146_p1;
                empty_320_reg_220 <= empty_320_fu_162_p1;
                icmp_ln20_2_reg_232 <= icmp_ln20_2_fu_174_p2;
                sub_i_i_reg_226 <= sub_i_i_fu_168_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_read_reg_182 <= stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_dout;
                stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_read_reg_187 <= stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n, stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n, stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n, stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n, grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_done, grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_block_state17_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n = ap_const_logic_0) or (stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    RIi_address0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_address0, grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIi_address0, ap_CS_fsm_state3, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RIi_address0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIi_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            RIi_address0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_address0;
        else 
            RIi_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    RIi_ce0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_ce0, grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIi_ce0, ap_CS_fsm_state3, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RIi_ce0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIi_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            RIi_ce0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_ce0;
        else 
            RIi_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    RIi_we0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            RIi_we0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RIi_we0;
        else 
            RIi_we0 <= ap_const_logic_0;
        end if; 
    end process;


    RIo_address0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_address0, grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RIo_address0, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            RIo_address0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RIo_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RIo_address0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_address0;
        else 
            RIo_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    RIo_ce0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_ce0, grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RIo_ce0, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            RIo_ce0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RIo_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RIo_ce0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_ce0;
        else 
            RIo_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    RIo_we0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_we0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RIo_we0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_RIo_we0;
        else 
            RIo_we0 <= ap_const_logic_0;
        end if; 
    end process;


    RRi_address0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_address0, grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRi_address0, ap_CS_fsm_state3, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RRi_address0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRi_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            RRi_address0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_address0;
        else 
            RRi_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    RRi_ce0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_ce0, grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRi_ce0, ap_CS_fsm_state3, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RRi_ce0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRi_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            RRi_ce0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_ce0;
        else 
            RRi_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    RRi_we0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            RRi_we0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_RRi_we0;
        else 
            RRi_we0 <= ap_const_logic_0;
        end if; 
    end process;


    RRo_address0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_address0, grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RRo_address0, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            RRo_address0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RRo_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RRo_address0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_address0;
        else 
            RRo_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    RRo_ce0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_ce0, grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RRo_ce0, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            RRo_ce0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_RRo_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RRo_ce0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_ce0;
        else 
            RRo_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    RRo_we0_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_we0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RRo_we0 <= grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_RRo_we0;
        else 
            RRo_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(ap_block_state17_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state17_on_subcall_done)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done)
    begin
        if ((grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n, stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n, stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n, stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n)
    begin
        if (((stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n = ap_const_logic_0) or (stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_done)
    begin
        if ((grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n, stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n, stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n, stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n)
    begin
                ap_block_state1 <= ((stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n = ap_const_logic_0) or (stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_done, grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_done = ap_const_logic_0) or (grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done, ap_CS_fsm_state19)
    begin
        if (((grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done, ap_CS_fsm_state19)
    begin
        if (((grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_318_fu_146_p1 <= sub_i_to_int_i_fu_143_p1(63 - 1 downto 0);
    empty_319_fu_152_p1 <= sub_i_to_int_i_fu_143_p1(52 - 1 downto 0);
    empty_320_fu_162_p1 <= sub_i_neg_i_fu_156_p2(63 - 1 downto 0);
    grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start <= grp_RFIFilter_0_2048_double_Pipeline_loop_114_fu_105_ap_start_reg;
    grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start <= grp_RFIFilter_0_2048_double_Pipeline_loop_1_fu_94_ap_start_reg;
    grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_start_reg;
    grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_ap_start_reg;

    grp_fu_126_ce_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state8, grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_ap_done = ap_const_logic_1)))) then 
            grp_fu_126_ce <= ap_const_logic_1;
        else 
            grp_fu_126_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_126_p0 <= stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_read_reg_182;
    grp_fu_126_p1 <= stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_read_reg_187;
    icmp_ln20_2_fu_174_p2 <= "1" when (empty_319_fu_152_p1 = ap_const_lv52_0) else "0";

    stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read;
        else 
            stream_Brd_Acq_Im_out_4_RFI_Filter_raw_data_im_i_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read <= grp_RFIFilter_0_2048_double_Pipeline_loop_2_fu_84_stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read;
        else 
            stream_Brd_Acq_Real_out_4_RFI_Filter_raw_data_real_i_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_blk_n <= stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n;
        else 
            stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n, stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n, stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n, stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n)
    begin
        if ((not(((stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n = ap_const_logic_0) or (stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_read <= ap_const_logic_1;
        else 
            stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_blk_n <= stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n;
        else 
            stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n, stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n, stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n, stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n)
    begin
        if ((not(((stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n = ap_const_logic_0) or (stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_read <= ap_const_logic_1;
        else 
            stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_blk_n <= stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n;
        else 
            stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n, stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n, stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n, stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n)
    begin
        if ((not(((stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n = ap_const_logic_0) or (stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_read <= ap_const_logic_1;
        else 
            stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_blk_n <= stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n;
        else 
            stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n, stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n, stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n, stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n)
    begin
        if ((not(((stream_Brd_MAD_R_out_2_RFI_Filter_mad_R_i_empty_n = ap_const_logic_0) or (stream_Brd_MAD_I_out_1_RFI_Filter_mad_I_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_empty_n = ap_const_logic_0) or (stream_Brd_STD_I_out_1_RFI_Filter_std_I_i_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_read <= ap_const_logic_1;
        else 
            stream_Brd_STD_R_out_2_RFI_Filter_std_R_i_read <= ap_const_logic_0;
        end if; 
    end process;

    stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_din <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_din;

    stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write;
        else 
            stream_RFI_Filter_filtered_im_data_o_Brd_Res_Im_in_write <= ap_const_logic_0;
        end if; 
    end process;

    stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_din <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_din;

    stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write_assign_proc : process(grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write <= grp_RFIFilter_0_2048_double_Pipeline_loop_3_fu_116_stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write;
        else 
            stream_RFI_Filter_filtered_real_data_o_Brd_Res_Real_in_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_i_i_fu_168_p1 <= sub_i_neg_i_fu_156_p2;
    sub_i_neg_i_fu_156_p2 <= (sub_i_to_int_i_fu_143_p1 xor ap_const_lv64_8000000000000000);
    sub_i_to_int_i_fu_143_p1 <= av_threshold_i_reg_207;
end behav;
