-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_graph_top_rfi_C_sortList is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    data_ce0 : OUT STD_LOGIC;
    data_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    sorted_list_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    sorted_list_ce0 : OUT STD_LOGIC;
    sorted_list_we0 : OUT STD_LOGIC;
    sorted_list_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of top_graph_top_rfi_C_sortList is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv12_800 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal num_V_reg_221 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln43_fu_125_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln43_reg_229 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln52_fu_133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv3_i_fu_154_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3_i_reg_242 : STD_LOGIC_VECTOR (15 downto 0);
    signal count_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal count_V_load_reg_250 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal index_3_fu_186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_3_reg_255 : STD_LOGIC_VECTOR (7 downto 0);
    signal count_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal count_V_ce0 : STD_LOGIC;
    signal count_V_we0 : STD_LOGIC;
    signal count_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal count_V_ce1 : STD_LOGIC;
    signal count_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_done : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_idle : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_ready : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_data_ce0 : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_min_value_V_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_min_value_V_out_ap_vld : STD_LOGIC;
    signal grp_sortList_Pipeline_occurence_loop_fu_94_ap_start : STD_LOGIC;
    signal grp_sortList_Pipeline_occurence_loop_fu_94_ap_done : STD_LOGIC;
    signal grp_sortList_Pipeline_occurence_loop_fu_94_ap_idle : STD_LOGIC;
    signal grp_sortList_Pipeline_occurence_loop_fu_94_ap_ready : STD_LOGIC;
    signal grp_sortList_Pipeline_occurence_loop_fu_94_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sortList_Pipeline_occurence_loop_fu_94_data_ce0 : STD_LOGIC;
    signal grp_sortList_Pipeline_occurence_loop_fu_94_count_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sortList_Pipeline_occurence_loop_fu_94_count_V_ce0 : STD_LOGIC;
    signal grp_sortList_Pipeline_occurence_loop_fu_94_count_V_we0 : STD_LOGIC;
    signal grp_sortList_Pipeline_occurence_loop_fu_94_count_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sortList_Pipeline_occurence_loop_fu_94_count_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sortList_Pipeline_occurence_loop_fu_94_count_V_ce1 : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_done : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_idle : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_ready : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_ce0 : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_we0 : STD_LOGIC;
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_sortList_Pipeline_occurence_loop_fu_94_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal conv_i24_fu_149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_V_5_fu_34 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_7_fu_139_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal index_fu_38 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln52_fu_145_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_97_fu_174_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_98_fu_178_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_graph_top_rfi_C_sortList_Pipeline_VITIS_LOOP_28_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        num_V_3 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        min_value_V_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        min_value_V_out_ap_vld : OUT STD_LOGIC );
    end component;


    component top_graph_top_rfi_C_sortList_Pipeline_occurence_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (10 downto 0);
        count_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        count_V_ce0 : OUT STD_LOGIC;
        count_V_we0 : OUT STD_LOGIC;
        count_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        count_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        count_V_ce1 : OUT STD_LOGIC;
        count_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component top_graph_top_rfi_C_sortList_Pipeline_VITIS_LOOP_55_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        index : IN STD_LOGIC_VECTOR (7 downto 0);
        count_V_load_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        sorted_list_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        sorted_list_ce0 : OUT STD_LOGIC;
        sorted_list_we0 : OUT STD_LOGIC;
        sorted_list_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_i : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component top_graph_top_rfi_C_sortList_count_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    count_V_U : component top_graph_top_rfi_C_sortList_count_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => count_V_address0,
        ce0 => count_V_ce0,
        we0 => count_V_we0,
        d0 => count_V_d0,
        q0 => count_V_q0,
        address1 => grp_sortList_Pipeline_occurence_loop_fu_94_count_V_address1,
        ce1 => count_V_ce1,
        q1 => count_V_q1);

    grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86 : component top_graph_top_rfi_C_sortList_Pipeline_VITIS_LOOP_28_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start,
        ap_done => grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_done,
        ap_idle => grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_idle,
        ap_ready => grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_ready,
        num_V_3 => num_V_reg_221,
        data_address0 => grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_data_address0,
        data_ce0 => grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_data_ce0,
        data_q0 => data_q0,
        min_value_V_out => grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_min_value_V_out,
        min_value_V_out_ap_vld => grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_min_value_V_out_ap_vld);

    grp_sortList_Pipeline_occurence_loop_fu_94 : component top_graph_top_rfi_C_sortList_Pipeline_occurence_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sortList_Pipeline_occurence_loop_fu_94_ap_start,
        ap_done => grp_sortList_Pipeline_occurence_loop_fu_94_ap_done,
        ap_idle => grp_sortList_Pipeline_occurence_loop_fu_94_ap_idle,
        ap_ready => grp_sortList_Pipeline_occurence_loop_fu_94_ap_ready,
        data_address0 => grp_sortList_Pipeline_occurence_loop_fu_94_data_address0,
        data_ce0 => grp_sortList_Pipeline_occurence_loop_fu_94_data_ce0,
        data_q0 => data_q0,
        trunc_ln => trunc_ln43_reg_229,
        count_V_address0 => grp_sortList_Pipeline_occurence_loop_fu_94_count_V_address0,
        count_V_ce0 => grp_sortList_Pipeline_occurence_loop_fu_94_count_V_ce0,
        count_V_we0 => grp_sortList_Pipeline_occurence_loop_fu_94_count_V_we0,
        count_V_d0 => grp_sortList_Pipeline_occurence_loop_fu_94_count_V_d0,
        count_V_address1 => grp_sortList_Pipeline_occurence_loop_fu_94_count_V_address1,
        count_V_ce1 => grp_sortList_Pipeline_occurence_loop_fu_94_count_V_ce1,
        count_V_q1 => count_V_q1);

    grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102 : component top_graph_top_rfi_C_sortList_Pipeline_VITIS_LOOP_55_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start,
        ap_done => grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_done,
        ap_idle => grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_idle,
        ap_ready => grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_ready,
        index => index_fu_38,
        count_V_load_1 => count_V_load_reg_250,
        sorted_list_address0 => grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_address0,
        sorted_list_ce0 => grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_ce0,
        sorted_list_we0 => grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_we0,
        sorted_list_d0 => grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_d0,
        conv3_i => conv3_i_reg_242);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_ready = ap_const_logic_1)) then 
                    grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_ready = ap_const_logic_1)) then 
                    grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sortList_Pipeline_occurence_loop_fu_94_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sortList_Pipeline_occurence_loop_fu_94_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_sortList_Pipeline_occurence_loop_fu_94_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sortList_Pipeline_occurence_loop_fu_94_ap_ready = ap_const_logic_1)) then 
                    grp_sortList_Pipeline_occurence_loop_fu_94_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_V_5_fu_34_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_V_5_fu_34 <= ap_const_lv12_0;
            elsif (((icmp_ln52_fu_133_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i_V_5_fu_34 <= i_V_7_fu_139_p2;
            end if; 
        end if;
    end process;

    index_fu_38_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                index_fu_38 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_done = ap_const_logic_1))) then 
                index_fu_38 <= index_3_reg_255;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_133_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                conv3_i_reg_242 <= conv3_i_fu_154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                count_V_load_reg_250 <= count_V_q0;
                index_3_reg_255 <= index_3_fu_186_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                num_V_reg_221 <= data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                trunc_ln43_reg_229 <= trunc_ln43_fu_125_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln52_fu_133_p2, grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_done, grp_sortList_Pipeline_occurence_loop_fu_94_ap_done, grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_sortList_Pipeline_occurence_loop_fu_94_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln52_fu_133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_done)
    begin
        if ((grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_sortList_Pipeline_occurence_loop_fu_94_ap_done)
    begin
        if ((grp_sortList_Pipeline_occurence_loop_fu_94_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_done)
    begin
        if ((grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln52_fu_133_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((icmp_ln52_fu_133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, icmp_ln52_fu_133_p2)
    begin
        if (((icmp_ln52_fu_133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv3_i_fu_154_p2 <= std_logic_vector(unsigned(grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_min_value_V_out) + unsigned(zext_ln52_fu_145_p1));
    conv_i24_fu_149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_V_5_fu_34),64));

    count_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state7, grp_sortList_Pipeline_occurence_loop_fu_94_count_V_address0, ap_CS_fsm_state6, conv_i24_fu_149_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            count_V_address0 <= conv_i24_fu_149_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            count_V_address0 <= ap_const_lv64_0(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            count_V_address0 <= grp_sortList_Pipeline_occurence_loop_fu_94_count_V_address0;
        else 
            count_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    count_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, grp_sortList_Pipeline_occurence_loop_fu_94_count_V_ce0, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            count_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            count_V_ce0 <= grp_sortList_Pipeline_occurence_loop_fu_94_count_V_ce0;
        else 
            count_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    count_V_ce1_assign_proc : process(grp_sortList_Pipeline_occurence_loop_fu_94_count_V_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            count_V_ce1 <= grp_sortList_Pipeline_occurence_loop_fu_94_count_V_ce1;
        else 
            count_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    count_V_d0_assign_proc : process(ap_CS_fsm_state1, grp_sortList_Pipeline_occurence_loop_fu_94_count_V_d0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            count_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            count_V_d0 <= grp_sortList_Pipeline_occurence_loop_fu_94_count_V_d0;
        else 
            count_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    count_V_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_sortList_Pipeline_occurence_loop_fu_94_count_V_we0, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            count_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            count_V_we0 <= grp_sortList_Pipeline_occurence_loop_fu_94_count_V_we0;
        else 
            count_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_address0_assign_proc : process(ap_CS_fsm_state1, grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_data_address0, grp_sortList_Pipeline_occurence_loop_fu_94_data_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            data_address0 <= ap_const_lv64_0(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            data_address0 <= grp_sortList_Pipeline_occurence_loop_fu_94_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_address0 <= grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_data_address0;
        else 
            data_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    data_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_data_ce0, grp_sortList_Pipeline_occurence_loop_fu_94_data_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            data_ce0 <= grp_sortList_Pipeline_occurence_loop_fu_94_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_ce0 <= grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_data_ce0;
        else 
            data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_97_fu_174_p1 <= count_V_q0(8 - 1 downto 0);
    empty_98_fu_178_p3 <= 
        empty_97_fu_174_p1 when (empty_fu_168_p2(0) = '1') else 
        ap_const_lv8_0;
    empty_fu_168_p2 <= "1" when (signed(count_V_q0) > signed(ap_const_lv16_0)) else "0";
    grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start <= grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_ap_start_reg;
    grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start <= grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_ap_start_reg;
    grp_sortList_Pipeline_occurence_loop_fu_94_ap_start <= grp_sortList_Pipeline_occurence_loop_fu_94_ap_start_reg;
    i_V_7_fu_139_p2 <= std_logic_vector(unsigned(i_V_5_fu_34) + unsigned(ap_const_lv12_1));
    icmp_ln52_fu_133_p2 <= "1" when (i_V_5_fu_34 = ap_const_lv12_800) else "0";
    index_3_fu_186_p2 <= std_logic_vector(unsigned(empty_98_fu_178_p3) + unsigned(index_fu_38));
    sorted_list_address0 <= grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_address0;
    sorted_list_ce0 <= grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_ce0;
    sorted_list_d0 <= grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_d0;
    sorted_list_we0 <= grp_sortList_Pipeline_VITIS_LOOP_55_2_fu_102_sorted_list_we0;
    trunc_ln43_fu_125_p1 <= grp_sortList_Pipeline_VITIS_LOOP_28_1_fu_86_min_value_V_out(11 - 1 downto 0);
    zext_ln52_fu_145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_V_5_fu_34),16));
end behav;
